/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Online;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author BlueMoon
 */
public class OnlineGui extends javax.swing.JFrame {

    PrintWriter pw;
    String name;
    AcceptThread aThr;

    public OnlineGui(String name, Socket sock) {
        initComponents();
        paintingPanel1.setParent(this);
        try {
            pw = new PrintWriter(sock.getOutputStream());
            BufferedReader in = new BufferedReader(new InputStreamReader(sock.getInputStream()));
            GetThread thr = new GetThread(in, jTextArea1, paintingPanel1);
            thr.start();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        this.name = name;
    }

    public OnlineGui(ServerSocket sock) {
        initComponents();
        paintingPanel1.setParent(this);
        name="DM";
        jTextArea1.setText("Open at port " + sock.getLocalPort());
        aThr = new AcceptThread(sock, jTextArea1, paintingPanel1);
        aThr.start();
        // new thread to forward things
    }

    public void command(String text){
        if (pw != null) {
            pw.println(text);
            pw.flush();
        } else {
            commandForAll(text);
        }
    }
    
    public void commandForAll(String text){
        synchronized (aThr.out) {
            for (PrintWriter pw : aThr.out) {
                pw.println(text);
                pw.flush();
            }
        }
    }
    
    public void print(String text) {
        //jTextArea1.setText(jTextArea1.getText()+"\n"+text);
        //System.out.println(n + text);
        if (pw != null) {
            pw.println(name + text);
            pw.flush();
        } else {
            printForAll(name + text);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        paintingPanel1 = new Swing.PaintingPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paintingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1056, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paintingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printForAll(String n) {
        synchronized (aThr.out) {
            for (PrintWriter pw : aThr.out) {
                pw.println(n);
                pw.flush();
            }
            jTextArea1.setText(jTextArea1.getText() + "\n"+ n);
        }
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        print(": "+jTextField1.getText());
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private Swing.PaintingPanel paintingPanel1;
    // End of variables declaration//GEN-END:variables
}
